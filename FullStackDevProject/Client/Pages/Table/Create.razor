@page "/tables/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Table</h3>
<hr />
<br />

<FormComponent ButtonText="Create Table" table="table" OnValidSubmit="@CreateTable" />
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Capacity: </label>
        <div>
            <InputNumber @bind-Value="@table.Capacity" class="form-control" />
            <ValidationMessage For="@(() => table.Capacity)" />
        </div>
    </div>

    <div class="form-group">
        <label>PreferredTable: </label>
        <div>
            <InputText @bind-Value="@table.PreferredTable" class="form-control" />
            <ValidationMessage For="@(() => table.PreferredTable)" />
        </div>
    </div>

    <div class="form-group">
        <label>Restaurant: </label>
        <div>
            <InputSelect @bind-Value="menu.Restaurant" class="form-control">
                <option value="">-- Select Restaurant --</option>
                @if (Restaurants != null)
                {
                    foreach (var restaurant in Restaurants)
                    {
                        <option value="@restaurant.Id">@restaurant.Name</option>
                    }
                }
            </InputSelect>
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Table
    </button>

@code {
    Table table = new Shared.Table();
    private IList<Capacity> Capacities;
    private IList<PreferredTable> PreferredTables;
    private IList<Restaurant> Restaurants;

    protected async override Task OnInitializedAsync()
    {
        Capacities = await _client.GetFromJsonAsync<List<Capacity>>($"{Endpoints.CapacitiesEndpoint}");
        PreferredTables = await _client.GetFromJsonAsync<List<PreferredTable>>($"{Endpoints.PreferredTablesEndpoint}");
        Restaurants = await _client.GetFromJsonAsync<List<Restaurant>>($"{Endpoints.RestaurantsEndpoint}");
    }

    private async Task CreateTable()
    {
        await _client.PostAsJsonAsync(Endpoints.TablesEndpoint, table);
        _navManager.NavigateTo("/tables/");
    }
}
