@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />

<FormComponent ButtonText="Create Make" customer="customer" OnValidSubmit="@CreateCustomer" />
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>First Name: </label>
        <div>
            <InputText @bind-Value="@customer.FirstName" class="form-control" />
            <ValidationMessage For="@(() => customer.FirstName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Last Name: </label>
        <div>
            <InputText @bind-Value="@customer.LastName" class="form-control" />
            <ValidationMessage For="@(() => customer.LastName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact: </label>
        <div>
            <InputNumber @bind-Value="@customer.Contact" class="form-control" />
            <ValidationMessage For="@(() => customer.Contact)" />
        </div>
    </div>

    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputText @bind-Value="@customer.Address" class="form-control" />
            <ValidationMessage For="@(() => customer.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>Username: </label>
        <div>
            <InputText @bind-Value="@customer.Username" class="form-control" />
            <ValidationMessage For="@(() => customer.Username)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password: </label>
        <div>
            <InputText @bind-Value="@customer.Password" class="form-control" />
            <ValidationMessage For="@(() => customer.Password)" />
        </div>
    </div>

    <div class="form-group">
        <label>OrderDate: </label>
        <div>
            <InputNumber @bind-Value="@customer.OrderDate" class="form-control" />
            <ValidationMessage For="@(() => customer.OrderDate)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>

@code {
    Customer customer = new Shared.Customer();
    private IList<FirstName> FirstNames;
    private IList<LastName> LastNames;
    private IList<Contact> Contacts;
    private IList<Address> Addresses;
    private IList<Username> Usernames;
    private IList<Password> Passwords;
    private IList<OrderDate> OrderDates;

    protected async override Task OnInitializedAsync()
    {
        FirstNames = await _client.GetFromJsonAsync<List<FirstName>>($"{Endpoints.FirstNamesEndpoint}");
        LastNames = await _client.GetFromJsonAsync<List<LastName>>($"{Endpoints.LastNamesEndpoint}");
        Contacts = await _client.GetFromJsonAsync<List<Contact>>($"{Endpoints.ContactsEndpoint}");
        Addresses = await _client.GetFromJsonAsync<List<Address>>($"{Endpoints.AddressesEndpoint}");
        Usernames = await _client.GetFromJsonAsync<List<Username>>($"{Endpoints.UsernamesEndpoint}");
        Passwords = await _client.GetFromJsonAsync<List<Password>>($"{Endpoints.PasswordsEndpoint}");
        OrderDates = await _client.GetFromJsonAsync<List<OrderDate>>($"{Endpoints.OrderDatesEndpoint}");
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }
}
